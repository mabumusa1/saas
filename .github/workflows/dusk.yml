name: dusk
on:
  push:
    branches: 
      - dev
  pull_request:
    branches: 
      - dev
env:
  DB_CONNECTION: mysql
  DB_HOST: 127.0.0.1
  DB_PORT: 3306
  DB_DATABASE: db
  DB_USERNAME: db
  DB_PASSWORD: db
  STRIPE_KEY: "sk_test_4eC39HqLyjWDarjtT1zdp7af"            
  STRIPE_SECRET: "sk_test_4eC39HqLyjWDarjtT1zdp7dc"  
  APP_ENV: testing
  APP_KEY: base64:YDLaFvN8fTX8yOAnYcw4OJWFyLq4R9yBZqNdEldw6Wk=
  APP_DEBUG: true
  APP_URL: http://localhost
  BCRYPT_ROUNDS: 4
  CACHE_DRIVER: array
  MAIL_MAILER: array 
  QUEUE_CONNECTION: sync
  SESSION_DRIVER: database
  TELESCOPE_ENABLED: false
  

jobs:
  dusk:
    runs-on: ubuntu-latest

    name: PHP Dusk    
    services:
      mysql:
        image: mysql:latest
        env:
          MYSQL_DATABASE: db
          MYSQL_HOST: 127.0.0.1
          MYSQL_USER: db
          MYSQL_PASSWORD: db
          MYSQL_ROOT_PASSWORD: db
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
        
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.0'
        extensions: mbstring, dom, fileinfo, mysql
        coverage: xdebug

    - name: Get composer cache directory
      id: composer-cache
      run: echo "::set-output name=dir::$(composer config cache-files-dir)"

    - name: Cache composer dependencies
      uses: actions/cache@v2
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: ${{ runner.os }}-composer-

    - name: Build NPM Assets
      uses: actions/setup-node@v2
      with:
        node-version: '14'
        cache: 'npm'
    - name: Complile Assets
      run: npm install
       

    - name: Install Composer dependencies
      run: composer install --no-progress --prefer-dist --optimize-autoloader

    - name: Prepare the application
      run: chmod -R 777 storage bootstrap/cache
    
    - name: Clear Config
      run: |
        php artisan config:clear
        php artisan cache:clear
        php artisan route:clear
        php artisan event:clear
        php artisan view:clear

    - name: Upgrade Chrome Driver
      run: php artisan dusk:chrome-driver `/opt/google/chrome/chrome --version | cut -d " " -f3 | cut -d "." -f1`

    - name: Start Chrome Driver
      run: ./vendor/laravel/dusk/bin/chromedriver-linux &

    - name: Run Laravel Server
      run: php artisan serve --no-reload &

    - name: Run Dusk Tests
      run: php artisan dusk
      env:
        APP_URL: "http://127.0.0.1:8000"
        DB_PORT: ${{ job.services.mysql.ports['3306'] }}
        STRIPE_API_BASE: "127.0.0.1:${{ job.services.localstripe.ports[8420] }}"       
        DUSK_DRIVER_URL: "http://127.0.0.1:9515"

    - name: Upload Screenshots
      if: failure()
      uses: actions/upload-artifact@v2
      with:
        name: screenshots
        path: tests/Browser/screenshots

    - name: Upload Console Logs
      if: failure()
      uses: actions/upload-artifact@v2
      with:
        name: console
        path: tests/Browser/console
