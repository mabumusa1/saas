name: phpunit

on:
  push: 
    branches: 
      - dev
  pull_request:
    branches: 
      - dev      
env:
  COVERALLS_REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  DB_CONNECTION: mysql
  DB_HOST: 127.0.0.1
  DB_PORT: 3306
  DB_DATABASE: db
  DB_USERNAME: db
  DB_PASSWORD: db
  STRIPE_KEY: "sk_test_4eC39HqLyjWDarjtT1zdp7af"            
  STRIPE_SECRET: "sk_test_4eC39HqLyjWDarjtT1zdp7dc"  
  APP_ENV: testing
  APP_KEY: base64:YDLaFvN8fTX8yOAnYcw4OJWFyLq4R9yBZqNdEldw6Wk=
  APP_DEBUG: true
  APP_URL: http://localhost
  BCRYPT_ROUNDS: 4
  CACHE_DRIVER: array
  MAIL_MAILER: array 
  QUEUE_CONNECTION: sync
  SESSION_DRIVER: array
  TELESCOPE_ENABLED: false

jobs:
  phpunit:
    runs-on: ubuntu-latest

    name: PHPUnit
    services:
      localstripe:
        image: adrienverge/localstripe:latest
        ports:
          - 8420
      mysql:
        image: mysql:latest
        env:
          MYSQL_DATABASE: db
          MYSQL_HOST: 127.0.0.1
          MYSQL_USER: db
          MYSQL_PASSWORD: db
          MYSQL_ROOT_PASSWORD: db
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - name: Checkout
      uses: actions/checkout@v2
    
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.0'
        extensions: mbstring, dom, fileinfo, mysql
        coverage: xdebug
    - name: Get composer cache directory
      id: composer-cache
      run: echo "::set-output name=dir::$(composer config cache-files-dir)"

    - name: Cache composer dependencies
      uses: actions/cache@v2
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: ${{ runner.os }}-composer-

    - name: Install Composer dependencies
      run: composer install --no-progress --prefer-dist --optimize-autoloader

    - name: Prepare the application
      run: chmod -R 777 storage bootstrap/cache
 
    - name: Clear Config
      run: php artisan config:clear

    - name: Run Migration
      run: php artisan migrate -v
      env:
        DB_PORT: ${{ job.services.mysql.ports['3306'] }}

    - name: Test with phpunit
      run: php artisan test --parallel --recreate-databases --coverage-clover build/logs/clover.xml --min=90
      env:
        DB_PORT: ${{ job.services.mysql.ports['3306'] }}
        STRIPE_API_BASE: "127.0.0.1:${{ job.services.localstripe.ports[8420] }}"
        
    - name: Save Clover
      uses: actions/upload-artifact@v2
      if: success()
      with:
        name: clover
        path: build/logs/clover.xml

    - name: Get Insights
      run: php artisan insights  -n --ansi --format=github-action
      
    - name: Get Clover
      uses: actions/download-artifact@v2
      with:
        name: clover
        path: build/logs/

    - name: Get report
      run: ./vendor/php-coveralls/php-coveralls/bin/php-coveralls --coverage_clover=build/logs/clover.xml -v